name: Call APIs
run-name: Call APIs by @${{ github.actor }}

on: # 定义触发工作流的事件
  push: # 推送到指定分支时运行
    branches:
      - master
      - main
  schedule:
    # Minute - Hour - DayOfMonth - Month - DayOfWeek
    #  0~59  - 0~23 -    1~31    - 1~12  -    0~6
    - cron: "0 9,14,19 * * 1-6"
  watch:
    types: [started] # 加星星立刻运行

jobs:
  build:
    # permissions:
    #   contents: read
    #   pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Clone main scripts from private repo
        uses: actions/checkout@main
        with:
          repository: "${{ github.actor }}/${{ secrets.SCRIPT_REPO }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        env:
          PYTHON_VERSION: "3.9"
        uses: actions/setup-python@main
        with:
          python-version: ${{env.PYTHON_VERSION}}
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run script to call APIs
        env:
          ID: ${{secrets.ID}}
          KEY: ${{secrets.KEY}}
          MAIL_TO: ${{secrets.MAIL_TO}}
          TG_BOT_TOKEN: ${{secrets.TG_TOKEN}}
          TG_CHAT_ID: ${{secrets.TG_ID}}
        run: |
          cd ${{secrets.SCRIPT_REPO}}
          if [ -z "$TG_BOT_TOKEN" ] || [ -z "$TG_CHAT_ID" ]; then
            python call.py $ID $KEY $MAIL_TO
          else
            python call.py $ID $KEY $MAIL_TO $TG_BOT_TOKEN $TG_CHAT_ID
          fi
      - name: Push new refresh_token to script repo if refreshed
        # 更新了 refresh_token 时才需要 push
        # todo:测试能够正常push新token
        run: |
          if test -f refreshed; then
            git config user.name ${{ github.actor }}
            git config user.email ${{ secrets.EMAIL }}
            git add token.json
            git commit -m "Refresh the refresh_token"
            git push -u origin main
          fi
